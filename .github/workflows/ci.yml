name: CI

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: [stable]

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ matrix.go-version }}
                  cache-dependency-path: go.sum

            - name: Install deps
              run: go mod download

            - name: Run vet
              run: go vet ./...

            - name: Run tests and coverage
              run: |
                  go test -v -cover -coverprofile=coverage.out ./...

            - name: Extract coverage percentage
              id: coverage
              run: |
                  total=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
                  echo "total=$total" >> $GITHUB_OUTPUT

            - name: Coverage report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-report
                  path: coverage.out

            - name: Run benchmark comparison
              id: benchmark
              if: github.event_name == 'pull_request'
              run: |
                  go install golang.org/x/perf/cmd/benchstat@latest
                  git fetch origin ${{ github.base_ref }}
                  git checkout origin/${{ github.base_ref }}
                  go test -run=^$ -bench=. -benchmem ./... > benchmark-base.txt
                  git checkout $GITHUB_SHA
                  go test -run=^$ -bench=. -benchmem ./... > benchmark-pr.txt
                  result=$($HOME/go/bin/benchstat benchmark-base.txt benchmark-pr.txt)
                  echo "$result" | tee benchmark.txt
                  echo "result<<EOF" >> $GITHUB_OUTPUT
                  echo "$result" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Run benchmarks
              if: github.event_name != 'pull_request'
              run: |
                  go test -run=^$ -bench=. -benchmem ./... > benchmark.txt

            - name: Benchmark report
              uses: actions/upload-artifact@v4
              with:
                  name: benchmark-report
                  path: benchmark.txt

            - name: Post PR summary
              if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
              continue-on-error: true
              uses: actions/github-script@v7
              env:
                  COVERAGE: ${{ steps.coverage.outputs.total }}
                  BENCH: ${{ steps.benchmark.outputs.result }}
              with:
                  script: |
                      const body = `### Coverage\n${process.env.COVERAGE}\n\n### Benchmark\n\u0060\u0060\u0060\n${process.env.BENCH}\n\u0060\u0060\u0060`;
                      github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body
                      });

            - name: Workflow summary
              if: github.event_name == 'pull_request'
              run: |
                  echo "### Coverage" >> $GITHUB_STEP_SUMMARY
                  echo "${{ steps.coverage.outputs.total }}" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Benchmark" >> $GITHUB_STEP_SUMMARY
                  echo '```' >> $GITHUB_STEP_SUMMARY
                  echo "${{ steps.benchmark.outputs.result }}" >> $GITHUB_STEP_SUMMARY
                  echo '```' >> $GITHUB_STEP_SUMMARY
